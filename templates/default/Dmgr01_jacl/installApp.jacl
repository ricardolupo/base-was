proc installApp {serverName nodeName args} {

   #--------------------------------------------------------------
   # check for optional argument 
   #--------------------------------------------------------------
   set app [lindex $args 0]
   if {[llength $args] > 1} {
      set appName [lindex $args 1]
   } else {
      set appName ""
   }

   #--------------------------------------------------------------
   # set up globals
   #--------------------------------------------------------------
   global AdminConfig
   global AdminControl
   global AdminApp

   #--------------------------------------------------------------
   # do some sanity checking 
   #     -- do we have a node by this name? 
   #--------------------------------------------------------------
   set node [$AdminConfig getid /Node:$nodeName/]
   puts "ex1: checking for existence of node $nodeName"
   if {[llength $node] == 0} {
      puts "ex1: Error -- node not found for name $nodeName"
      return 
   }


   #--------------------------------------------------------------
   #     -- was a earfile name supplied 
   #--------------------------------------------------------------
   if {[llength $app] == 0} {
      puts "ex1: Error -- No application specified."
      return 
   }
   #--------------------------------------------------------------
   #     -- is a server by this name already running on the node? 
   #--------------------------------------------------------------
   puts "ex1: checking to see if server $serverName is already running on node $nodeName"
   set runningServer [$AdminControl completeObjectName type=Server,node=$nodeName,process=$serverName,*]
   if {[llength $runningServer] > 0} {
      puts "ex1: Error -- Server $serverName already running on node $nodeName"
      return 
   }

   #--------------------------------------------------------------
   #     -- is a nodeSync MBean available on this node? 
   #--------------------------------------------------------------
   puts "ex1: checking for the existence of a NodeSync MBean on node $nodeName"
   set nodeSync [$AdminControl completeObjectName type=NodeSync,node=$nodeName,*]
   if {[llength $nodeSync] == 0} {
      puts "ex1: Error -- NodeSync MBean not found for name $nodeName"
      return 
   }

   #--------------------------------------------------------------
   # Create a server using the supplied server name and node 
   #--------------------------------------------------------------
   puts "ex1: creating a server $serverName ....."
   set name_attribute [list name $serverName]
   set attributes     [list $name_attribute]
   set server [$AdminConfig create Server $node $attributes] 

   #--------------------------------------------------------------
   # Change the list of transports associated with the WebContainer
   # for this server.  Create one secure and one non-secure transport 
   #--------------------------------------------------------------
   puts "ex1: modifying HTTP port addresses"
   set http_nonsecure_address [list [list sslEnabled false] [list address [list [list host {}] [list port 9088]]]] 
   set http_secure_address    [list [list sslEnabled true] [list address [list [list host {}] [list port 9448]]] [list sslConfig DefaultSSLSettings]] 
   set transports             [list transports:HTTPTransport [list $http_nonsecure_address $http_secure_address]]
   set web_container [$AdminConfig list WebContainer $server]
   $AdminConfig modify $web_container [list $transports]

   #--------------------------------------------------------------
   # Install an application onto this server
   #--------------------------------------------------------------
   puts "ex1: installing the application"
   set app_options [list -node $nodeName -server $serverName]
   if {[llength $appName] > 0} {
      lappend app_options -appname $appName
   }
   $AdminApp install $app $app_options 

   #--------------------------------------------------------------
   # Save all the changes 
   #--------------------------------------------------------------
   puts "ex1: saving the configuration"
   $AdminConfig save

   #--------------------------------------------------------------
   # Find out if serverStartupSyncEnabled is true for this node
   # We just created this server, so if this attribute is set to
   # "false" we have to perform a sync.  If we do not, the node we
   # are installing on may have an out-of-date copy of the config
   # data. 
   #--------------------------------------------------------------
   set enabled [$AdminControl getAttribute $nodeSync serverStartupSyncEnabled]
   if {[string compare $enabled "false"] == 0} {
      puts "ex1: Invoking synchronization for node $nodeSync because serverStartupSyncEnabled is set to false..."
      $AdminControl invoke $nodeSync sync
      puts "ex1: Done with synchronization."
   }

   #--------------------------------------------------------------
   # start the server 
   #--------------------------------------------------------------
   puts "ex1: starting server $serverName ..."
   $AdminControl startServer $serverName $nodeName 
   puts "ex1: done."
}

#-----------------------------------------------------------------
# Main
#-----------------------------------------------------------------
<% node[:base_was][:was][:application].each do |app_name, app| %>
installApp "<%= app[:server_name] %>" "<%= app[:node_name] %>" "<%= app[:path] %>" "<%= app_name %>"
<% end %>
